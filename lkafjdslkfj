[1mdiff --git a/src/pages/tasks/input/index.js b/src/pages/tasks/input/index.js[m
[1mdeleted file mode 100644[m
[1mindex 73bd58d..0000000[m
[1m--- a/src/pages/tasks/input/index.js[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-import React from 'react';[m
[31m-import PropTypes from 'prop-types';[m
[31m-[m
[31m-import './input.css';[m
[31m-[m
[31m-const ToDoInput = ({ value, onChange, onKeyPress }) => ([m
[31m-  <div className="todo-input-wrapper">[m
[31m-    <i className="fas fa-plus" />[m
[31m-    <input[m
[31m-      className="todo-input"[m
[31m-      placeholder="Click to add task"[m
[31m-      onChange={onChange}[m
[31m-      value={value}[m
[31m-      onKeyPress={onKeyPress}[m
[31m-    />[m
[31m-  </div>[m
[31m-);[m
[31m-[m
[31m-ToDoInput.propTypes = {[m
[31m-  onChange: PropTypes.func,[m
[31m-  onKeyPress: PropTypes.func,[m
[31m-  value: PropTypes.string,[m
[31m-}[m
[31m-[m
[31m-ToDoInput.defaultProps = {[m
[31m-  onChange: () => {},[m
[31m-  onKeyPress: () => {},[m
[31m-  value: '',[m
[31m-}[m
[31m-[m
[31m-export default ToDoInput;[m
\ No newline at end of file[m
[1mdiff --git a/src/pages/tasks/input/input.css b/src/pages/tasks/input/input.css[m
[1mdeleted file mode 100644[m
[1mindex 3ba599f..0000000[m
[1m--- a/src/pages/tasks/input/input.css[m
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-.todo-input-wrapper {[m
[31m-  position: relative;[m
[31m-  border-bottom: 1px solid #ededed;[m
[31m-}[m
[31m-[m
[31m-.todo-input {[m
[31m-  font-family: 'Indie Flower', cursive;[m
[31m-  padding: 16px 16px 16px 60px;[m
[31m-  border: none;[m
[31m-  background: rgba(0, 0, 0, 0.003);[m
[31m-  width: 100%;[m
[31m-  box-sizing: border-box;[m
[31m-  font-size: 28px;[m
[31m-  font-style: italic;[m
[31m-  box-shadow: inset 0 -2px 40px rgba(0,0,0,0.03);[m
[31m-}[m
[31m-[m
[31m-.fa-plus {[m
[31m-  position: absolute;[m
[31m-  font-size: 24px;[m
[31m-  top: 50%;[m
[31m-  transform: translateY(-50%);[m
[31m-  left: 20px;[m
[31m-}[m
[31m-[m
[31m-.todo-input::-webkit-input-placeholder {[m
[31m-  font-family: 'Indie Flower', cursive;[m
[31m-}[m
[31m-.todo-input::-moz-placeholder {[m
[31m-  font-family: 'Indie Flower', cursive;[m
[31m-}[m
[31m-.todo-input:-moz-placeholder {[m
[31m-  font-family: 'Indie Flower', cursive;[m
[31m-}[m
[31m-.todo-input:-ms-input-placeholder {[m
[31m-  font-family: 'Indie Flower', cursive;[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/src/pages/tasks/list/item/item.js b/src/pages/tasks/list/item/item.js[m
[1mindex 72e4cea..56d6291 100644[m
[1m--- a/src/pages/tasks/list/item/item.js[m
[1m+++ b/src/pages/tasks/list/item/item.js[m
[36m@@ -1,28 +1,57 @@[m
[31m-import React from 'react';[m
[32m+[m[32mimport React, { Component } from 'react';[m
 import PropTypes from 'prop-types';[m
[32m+[m[32mimport { DI } from '../../../../store/';[m
 [m
[31m-const ToDoItem = ({ text, isCompleted, removeTask, id, completeTask }) => {[m
[31m-  const onCompleteTask = () => completeTask(id);[m
[31m-  const onRemoveTask = () => removeTask(id);[m
[32m+[m[32mclass ToDoItem extends Component {[m
[32m+[m[32m  static propTypes = {[m
[32m+[m[32m    text: PropTypes.string,[m
[32m+[m[32m    completeTask: PropTypes.func,[m
[32m+[m[32m    removeTask: PropTypes.func,[m
[32m+[m[32m    id: PropTypes.number,[m
[32m+[m[32m  };[m
[32m+[m[32m  static defaultProps = {[m
[32m+[m[32m    isCompleted: false,[m
[32m+[m[32m  };[m
 [m
[31m-  return ([m
[31m-    <li className="todo-item">[m
[31m-      <i onClick={onCompleteTask} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />[m
[31m-      <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>[m
[31m-      <div onClick={onRemoveTask}>–£–¥–∞–ª–∏—Ç—å</div>[m
[31m-    </li>[m
[31m-  );[m
[31m-}[m
[32m+[m[32m  constructor(props) {[m
[32m+[m[32m    super(props);[m
 [m
[31m-ToDoItem.propTypes = {[m
[31m-  text: PropTypes.string,[m
[31m-  completeTask: PropTypes.func,[m
[31m-  removeTask: PropTypes.func,[m
[31m-  id: PropTypes.number,[m
[31m-}[m
[32m+[m[32m    this.state = {[m
[32m+[m[32m      userID: props.userID[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  onChangeSelect = ({ target: {value} }) => {[m
[32m+[m[32m    this.setState({[m
[32m+[m[32m      userID: value[m
[32m+[m[32m    });[m
[32m+[m[32m    this.props.actions.tasks.changeUserTask([m
[32m+[m[32m      this.props.id,[m[41m [m
[32m+[m[32m      value[m
[32m+[m[32m    );[m
[32m+[m[32m  };[m
 [m
[31m-ToDoItem.defaultProps = {[m
[31m-  isCompleted: false,[m
[32m+[m[32m  render() {[m
[32m+[m[32m    const { text, isCompleted, removeTask, id, completeTask, users, actions } = this.props;[m
[32m+[m[32m    const { userID } = this.state;[m
[32m+[m[32m    const onCompleteTask = () => completeTask(id);[m
[32m+[m[32m    const onRemoveTask = () => removeTask(id);[m
[32m+[m[32m    const { list } = users;[m
[32m+[m[41m  [m
[32m+[m[32m    return ([m
[32m+[m[32m      <li className="todo-item">[m
[32m+[m[32m        <i onClick={onCompleteTask} className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />[m
[32m+[m[32m        <span className={isCompleted ? 'completed text' : 'text'}>{text}</span>[m
[32m+[m[32m        <select onChange={this.onChangeSelect} value={userID}>[m
[32m+[m[32m          <option disabled value={''}>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</option>[m
[32m+[m[32m          {list.map(el => ([m
[32m+[m[32m            <option key={el.id} value={el.id}>{el.name}</option>[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </select>[m
[32m+[m[32m        <div onClick={onRemoveTask}>–£–¥–∞–ª–∏—Ç—å</div>[m
[32m+[m[32m      </li>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
 }[m
 [m
[31m-export default ToDoItem;[m
\ No newline at end of file[m
[32m+[m[32mexport default DI(['users', 'tasks'])(ToDoItem);[m
\ No newline at end of file[m
[1mdiff --git a/src/pages/tasks/list/list.js b/src/pages/tasks/list/list.js[m
[1mindex 889a078..236ec66 100644[m
[1m--- a/src/pages/tasks/list/list.js[m
[1m+++ b/src/pages/tasks/list/list.js[m
[36m@@ -4,8 +4,8 @@[m [mimport ToDoItem from './item/';[m
 [m
 const ToDoList = ({ tasksList, removeTask, completeTask }) => ([m
   <ul className="todo-list">[m
[31m-    {tasksList.map(({ id, text, isCompleted }) => ([m
[31m-      <ToDoItem completeTask={completeTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />[m
[32m+[m[32m    {tasksList.map(({ id, text, isCompleted, userID }) => ([m
[32m+[m[32m      <ToDoItem key={id} completeTask={completeTask} removeTask={removeTask} id={id} userID={userID} text={text} isCompleted={isCompleted} />[m
     ))}[m
   </ul>[m
 );[m
[1mdiff --git a/src/pages/tasks/tasks.js b/src/pages/tasks/tasks.js[m
[1mindex 9a2556e..f450f76 100644[m
[1m--- a/src/pages/tasks/tasks.js[m
[1m+++ b/src/pages/tasks/tasks.js[m
[36m@@ -1,7 +1,7 @@[m
 import React, { Component } from 'react';[m
 import { DI } from '../../store';[m
 [m
[31m-import ToDoInput from './input';[m
[32m+[m[32mimport ToDoInput from '../../components/input';[m
 import ToDoList from './list';[m
 import Filter from './filter';[m
 [m
[1mdiff --git a/src/pages/users/users.js b/src/pages/users/users.js[m
[1mindex f3e505d..5574345 100644[m
[1m--- a/src/pages/users/users.js[m
[1m+++ b/src/pages/users/users.js[m
[36m@@ -1,9 +1,47 @@[m
[31m-import React from 'react';[m
[32m+[m[32mimport React, { Component } from 'react';[m
[32m+[m[32mimport { DI } from '../../store';[m
[32m+[m
[32m+[m[32mimport ToDoInput from '../../components/input';[m
[32m+[m[32mimport List from './list';[m
[32m+[m
[32m+[m[32mclass Users extends Component {[m
[32m+[m[32m  state = {[m
[32m+[m[32m    taskText: ''[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  handleInputChange = ({ target: { value } }) => {[m
[32m+[m[32m    this.setState({[m
[32m+[m[32m      taskText: value,[m
[32m+[m[32m    })[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addUser = ({ key }) => {[m
[32m+[m[32m    const { taskText } = this.state;[m
[32m+[m
[32m+[m[32m    if (taskText.length > 3 && key === 'Enter') {[m
[32m+[m[32m      const { actions } = this.props;[m
[32m+[m[32m      actions.users.addUser((new Date()).getTime(), taskText, false);[m
[32m+[m[32m      this.setState({[m
[32m+[m[32m        taskText: '',[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  render() {[m
[32m+[m[32m    const { taskText } = this.state;[m
[32m+[m[32m    const { users: { list } } = this.props;[m
 [m
[31m-export default function Users() {[m
     return ([m
[31m-        <div>[m
[31m-            Users[m
[31m-        </div>[m
[32m+[m[32m      <div className="todo-wrapper">[m
[32m+[m[32m        <ToDoInput[m[41m [m
[32m+[m[32m          onKeyPress={this.addUser}[m[41m [m
[32m+[m[32m          onChange={this.handleInputChange}[m[41m [m
[32m+[m[32m          value={taskText}[m
[32m+[m[32m        />[m
[32m+[m[32m        <List list={list} />[m
[32m+[m[32m      </div>[m
     );[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default DI(['users'])(Users);[m
\ No newline at end of file[m
[1mdiff --git a/src/store/modules.json b/src/store/modules.json[m
[1mindex 3447097..b744966 100644[m
[1m--- a/src/store/modules.json[m
[1m+++ b/src/store/modules.json[m
[36m@@ -1 +1 @@[m
[31m-{"modules":["tasks"]}[m
\ No newline at end of file[m
[32m+[m[32m{"modules":["tasks", "users"]}[m
\ No newline at end of file[m
[1mdiff --git a/src/store/tasks/actions.js b/src/store/tasks/actions.js[m
[1mindex 3a6a036..a314327 100644[m
[1m--- a/src/store/tasks/actions.js[m
[1m+++ b/src/store/tasks/actions.js[m
[36m@@ -20,4 +20,12 @@[m [mexport const completeTask = id => ({[m
 export const changeFilter = activeFilter => ({[m
   type: C.CHANGE_FILTER,[m
   activeFilter,[m
[31m-})[m
\ No newline at end of file[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mexport const changeUserTask = (taskID, userID) => ({[m
[32m+[m[32m  type: C.CHANGE_USER_TASK,[m
[32m+[m[32m  payload: {[m
[32m+[m[32m    taskID,[m[41m [m
[32m+[m[32m    userID[m
[32m+[m[32m  },[m
[32m+[m[32m});[m
\ No newline at end of file[m
[1mdiff --git a/src/store/tasks/const.js b/src/store/tasks/const.js[m
[1mindex d5e19a1..f8771bd 100644[m
[1m--- a/src/store/tasks/const.js[m
[1m+++ b/src/store/tasks/const.js[m
[36m@@ -1,4 +1,5 @@[m
 export const ADD_TASK = 'ADD_TASK';[m
 export const REMOVE_TASK = 'REMOVE_TASK';[m
 export const COMPLETE_TASK = 'COMPLETE_TASK';[m
[31m-export const CHANGE_FILTER = 'CHANGE_FILTER';[m
\ No newline at end of file[m
[32m+[m[32mexport const CHANGE_FILTER = 'CHANGE_FILTER';[m
[32m+[m[32mexport const CHANGE_USER_TASK = 'CHANGE_USER_TASK';[m
\ No newline at end of file[m
[1mdiff --git a/src/store/tasks/reducers.js b/src/store/tasks/reducers.js[m
[1mindex fcc16c8..e92db2c 100644[m
[1m--- a/src/store/tasks/reducers.js[m
[1m+++ b/src/store/tasks/reducers.js[m
[36m@@ -9,7 +9,7 @@[m [mif (!TASKS || !TASKS.list || !TASKS.list.length) {[m
   }[m
 }[m
 [m
[31m-export const list = (state = TASKS.list, { id, text, isCompleted, type }) => {[m
[32m+[m[32mexport const list = (state = TASKS.list, { id, text, isCompleted, type, payload }) => {[m
   switch (type) {[m
     case C.ADD_TASK:[m
       return [[m
[36m@@ -17,6 +17,7 @@[m [mexport const list = (state = TASKS.list, { id, text, isCompleted, type }) => {[m
           id,[m
           text,[m
           isCompleted,[m
[32m+[m[32m          userID: 1566572388227[m
         }[m
 			];[m
 			[m
[36m@@ -31,10 +32,18 @@[m [mexport const list = (state = TASKS.list, { id, text, isCompleted, type }) => {[m
 				return task;[m
 			});[m
 [m
[32m+[m[32m    case C.CHANGE_USER_TASK:[m
[32m+[m[32m      return [...state].map(task => {[m
[32m+[m[32m        if(task.id === payload.taskID) {[m
[32m+[m[32m          task.userID = payload.userID;[m
[32m+[m[32m        }[m
[32m+[m[32m        return task;[m
[32m+[m[32m      });[m
[32m+[m
     default:[m
       return state;[m
   }[m
[31m-}[m
[32m+[m[32m};[m
 [m
 const BASE_FILTER = 'all';[m
 [m
[36m@@ -45,4 +54,4 @@[m [mexport const filter = (state = BASE_FILTER, { type, activeFilter }) => {[m
     default:[m
       return state;[m
   }[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m};[m
\ No newline at end of file[m
[1mdiff --git a/src/store/users/actions.js b/src/store/users/actions.js[m
[1mindex e69de29..15819cd 100644[m
[1m--- a/src/store/users/actions.js[m
[1m+++ b/src/store/users/actions.js[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mimport * as C from './const';[m
[32m+[m
[32m+[m[32mexport const addUser = (id, name) => ({[m
[32m+[m[32m  type: C.ADD_USERS,[m
[32m+[m[32m  id,[m
[32m+[m[32m  name[m
[32m+[m[32m});[m
\ No newline at end of file[m
[1mdiff --git a/src/store/users/const.js b/src/store/users/const.js[m
[1mindex e69de29..7546eba 100644[m
[1m--- a/src/store/users/const.js[m
[1m+++ b/src/store/users/const.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mexport const ADD_USERS = 'ADD_USERS';[m
\ No newline at end of file[m
[1mdiff --git a/src/store/users/reducers.js b/src/store/users/reducers.js[m
[1mindex e69de29..b9470c8 100644[m
[1m--- a/src/store/users/reducers.js[m
[1m+++ b/src/store/users/reducers.js[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mimport * as C from './const';[m
[32m+[m[32mimport { load } from 'redux-localstorage-simple';[m
[32m+[m
[32m+[m[32mlet USERS = load({ namespace: 'todo-list' }).users;[m
[32m+[m
[32m+[m[32mif (!USERS || !USERS.list || !USERS.list.length) {[m
[32m+[m[32m  USERS = {[m
[32m+[m[32m    list: [],[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport const list = (state = USERS.list, { id, name, type }) => {[m
[32m+[m[32m  switch (type) {[m
[32m+[m		[32mcase C.ADD_USERS:[m[41m [m
[32m+[m			[32mreturn [[m
[32m+[m				[32m...state,[m
[32m+[m				[32m{[m
[32m+[m					[32mid,[m
[32m+[m					[32mname[m
[32m+[m				[32m}[m
[32m+[m			[32m][m
[32m+[m[32m    default:[m
[32m+[m[32m      return state;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
